AWSTemplateFormatVersion: "2010-09-09"
Description: "Sample VPC Template"

Parameters:
    EnvironmentName:
        Description: "An environent name that will be prefixed to resource names"
        Type: String
    VpcCIDR:
        Description: "Please enter the IP ragne (CIDER notation) for this VPC"
        Type: 10.192.0.0/16
    PublicSubnet1CIDR:
        Description: "Please enter the IP ragne (CIDER notation) for the public subnet in the 1st Availability Zone"
        Type: 10.192.10.0/16
    PublicSubnet2CIDR:
        Description: "Please enter the IP ragne (CIDER notation) for the public subnet in the 2nd Availability Zone"
        Type: 10.192.11.0/16
    PrivateSubnet1CIDR:
        Description: "Please enter the IP ragne (CIDER notation) for the private subnet in the 1st Availability Zone"
        Type: 10.192.20.0/16
    PrivateSubnet2CIDR:
        Description: "Please enter the IP ragne (CIDER notation) for the private subnet in the 2nd Availability Zone"
        Type: 10.192.21.0/16

Resources:
    MyVPC:
        Type: AWS::EC2::VPC
        Properties: 
            CidrBlock: !Ref VpcCIDR 
            EnableDnsHostnames: true
            EnableDnsSupport: true
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName
    MyInternetGateway:
        Type: AWS::EC2::InternetGateway
        Properties:
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName
    InternetGatewayAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            InternetGatewayId: !Ref InternetGateway
            VpcId: !Ref MyVPC
    PublicSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref MyVPC
            AvailabilityZone: !Select [ 0, !GetAZs '' ] 
            CidrBlock: !Ref PublicSubnet1CIDR
            MapPublicIpOnLaunch: true
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} Public Subnet (AZ1)
    PublicSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref MyVPC
            AvailabilityZone: !Select [ 1, !GetAZs '' ] 
            CidrBlock: !Ref PublicSubnet2CIDR
            MapPublicIpOnLaunch: true
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} Public Subnet (AZ2)
    PrivateSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref MyVPC
            AvailabilityZone: !Select [ 0, !GetAZs '' ] 
            CidrBlock: !Ref PrivateSubnet1CIDR
            MapPublicIpOnLaunch: true
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} Private  Subnet (AZ1)
    PrivateSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref MyVPC
            AvailabilityZone: !Select [ 1, !GetAZs '' ] 
            CidrBlock: !Ref PrivateSubnet2CIDR
            MapPublicIpOnLaunch: true
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} Private  Subnet (AZ2)

    NatGateway1EIP:
        Type: AWS::EC2::EIP
        DependsOn: InternetGatewayAttachment
        Properties:
            Domain: vpc
    NatGateway2EIP:
        Type: AWS::EC2::EIP
        DependsOn: InternetGatewayAttachment
        Properties:
            Domain: vpc
    NatGateway1:
        Type: AWS::EC2::NatGateway
        Properties:
        AllocationId: !GetAtt NatGateway1EIP.AllocationId
        SubnetId: !Ref PublicSubnet1
    NatGateway2:
        Type: AWS::EC2::NatGateway
        Properties:
        AllocationId: !GetAtt NatGateway2EIP.AllocationId
    PublicRouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref MyVPC
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName} Public Routes
